import type { PracticeQuestion } from '../../types';

export const L12_PRACTICE: Record<string, PracticeQuestion[]> = {
  L12101: [
    {
      question: '下列何者最能描述No-code（無程式碼）平台的特性？',
      options: {
        A: '需要使用者具備深厚的資料庫知識。',
        B: '提供純視覺化的開發環境，使用者透過拖拉拽的方式來建構應用。',
        C: '主要用於訓練複雜的機器學習模型。',
        D: '允許開發者編寫少量程式碼以進行客製化。'
      },
      correctAnswer: 'B',
      explanation: 'No-code平台的核心是其純視覺化的介面和預建模組，讓完全沒有程式設計背景的使用者也能像堆積木一樣搭建應用，無需編寫任何程式碼。'
    },
    {
      question: 'Low-code（低程式碼）平台的目標使用者主要是誰？',
      options: {
        A: '完全沒有技術背景的業務人員。',
        B: '專業開發者（用以提升效率）以及具備一定技術能力的IT人員。',
        C: '公司的高階管理層。',
        D: '數據庫管理員。'
      },
      correctAnswer: 'B',
      explanation: 'Low-code平台旨在加速專業開發者的開發流程，同時也讓懂一些技術的「公民開發者」能夠處理更複雜的任務，它是在效率和靈活性之間的一個平衡。'
    },
    {
      question: 'No-code 和 Low-code 平台出現的主要目的是為了解決什麼問題？',
      options: {
        A: '電腦處理速度不夠快的問題。',
        B: '傳統軟體開發人才短缺且開發週期長的挑戰。',
        C: '網路頻寬不足的問題。',
        D: '數據儲存成本過高的問題。'
      },
      correctAnswer: 'B',
      explanation: '這類平台的出現是為了應對日益增長的數位化需求與有限的專業開發人才之間的矛盾，透過降低開發門檻和提升開發效率來解決這個問題。'
    },
    {
      question: '一位市場行銷人員想為一次性的活動，快速建立一個簡單的線上報名表單，他最適合使用哪種工具？',
      options: {
        A: 'No-code 平台',
        B: 'Low-code 平台',
        C: '傳統程式開發 (如Python Django)',
        D: '數據庫管理系統 (如MySQL)'
      },
      correctAnswer: 'A',
      explanation: '這個場景需求簡單、明確，且使用者是沒有技術背景的行銷人員，非常適合使用No-code平台，可以快速、低成本地實現目標。'
    },
    {
      question: '在「自助餐的比喻」中，將「去吃有自助吧的火鍋店，可以自己調製醬料」比喻為什麼？',
      options: {
        A: 'No-code',
        B: 'Low-code',
        C: '傳統開發',
        D: 'AI開發'
      },
      correctAnswer: 'B',
      explanation: '這個比喻形象地說明了Low-code的特點：大部分功能是現成的（自助吧），但允許使用者在關鍵部分進行客製化（調製醬料），以滿足特定需求。'
    },
    {
      question: '下列關於 Low-code 的敘述，何者正確？',
      options: {
        A: '它完全不需要任何程式碼。',
        B: '它比 No-code 平台更缺乏靈活性。',
        C: '它旨在讓專業開發者也能提升工作效率。',
        D: '它的目標是完全取代專業開發者。'
      },
      correctAnswer: 'C',
      explanation: 'Low-code平台不僅賦能公民開發者，更是專業開發者的「效率放大器」，讓他們可以從重複的基礎工作中解放出來，專注於解決更複雜、更有價值的問題。'
    },
    {
      question: '一位IT工程師需要開發一個內部管理系統，其中大部分功能是標準的，但有一個功能需要與公司一個老舊的、非標準的ERP系統進行API整合。這種情況最適合使用？',
      options: {
        A: 'No-code 平台，因為大部分功能是標準的。',
        B: 'Low-code 平台，可以用視覺化工具完成標準部分，再手寫程式碼完成特殊API整合。',
        C: '完全從頭用傳統方式開發，因為有特殊需求。',
        D: '直接放棄這個專案，因為無法實現。'
      },
      correctAnswer: 'B',
      explanation: '這是Low-code平台最典型的應用場景：用其高效的視覺化能力處理80%的通用需求，再用其靈活的編碼能力解決20%的特殊、複雜需求。'
    },
    {
      question: '「公民開發者 (Citizen Developer)」通常指的是哪類人群？',
      options: {
        A: '受僱於政府的專業軟體工程師。',
        B: '在企業中，具備業務知識和一定技術能力，能使用No-code/Low-code工具開發應用的非專業開發人員。',
        C: '專門開發公民服務相關應用的駭客。',
        D: '在開源社群中貢獻程式碼的志願者。'
      },
      correctAnswer: 'B',
      explanation: '「公民開發者」是隨著No-code/Low-code平台興起而出現的概念，指的是那些身處業務第一線，並利用這些新工具來解決自身工作問題的員工。'
    },
    {
      question: 'No-code 平台的核心開發方式是什麼？',
      options: {
        A: '編寫SQL查詢語句。',
        B: '使用命令行介面。',
        C: '拖拉拽 (Drag-and-Drop) 預建模組。',
        D: '修改CSS樣式表。'
      },
      correctAnswer: 'C',
      explanation: '拖拉拽的視覺化操作是No-code平台的標誌性特徵，它將複雜的程式邏輯封裝在一個個易於理解的模組中，讓使用者可以直觀地進行組合。'
    },
    {
      question: '下列何者是 No-code 和 Low-code 平台的共同點？',
      options: {
        A: '都完全不需要寫任何程式碼。',
        B: '都旨在降低應用程式的開發門檻和縮短開發週期。',
        C: '都只能用來開發手機App。',
        D: '都擁有無限的客製化能力。'
      },
      correctAnswer: 'B',
      explanation: '儘管在實現方式和目標用戶上略有不同，但兩者共同的核心價值都是讓應用程式開發變得更快、更簡單、更容易被更多人所掌握。'
    }
  ],
  L12102: [
    {
      question: '企業在選擇導入No-code/Low-code平台時，需要特別警惕下列哪個潛在風險？',
      options: {
        A: '開發速度過快，導致產品過於超前。',
        B: '賦予業務人員太多權力。',
        C: '應用程式高度依賴特定平台，未來難以遷移，即「廠商鎖定」。',
        D: '平台的使用者介面過於簡單。'
      },
      correctAnswer: 'C',
      explanation: '廠商鎖定是使用No-code/Low-code平台最主要的長期風險之一。一旦企業在某個平台上建立了大量核心應用，就很難再將這些應用遷移到其他系統，從而在商業和技術上受制於該平台。'
    },
    {
      question: '下列何者是No-code/Low-code平台最核心的優勢？',
      options: {
        A: '能夠實現最高度的客製化。',
        B: '能夠處理最高併發的用戶請求。',
        C: '大幅加快開發速度，縮短產品上市時間。',
        D: '提供最強大的數據安全性。'
      },
      correctAnswer: 'C',
      explanation: '速度是這類平台最顯著的價值主張。透過重用預建模組和視覺化開發，它們可以將傳統開發模式下的數月工作量，縮短到數天或數週。'
    },
    {
      question: '下列哪個場景「不」適合使用No-code/Low-code平台來開發？',
      options: {
        A: '一個需要服務數百萬用戶、處理高併發交易的核心銀行系統。',
        B: '一個公司內部的員工差旅費報銷審批流程。',
        C: '一個用於快速驗證市場反應的產品原型(Prototype)。',
        D: '一個一次性的線下活動報名網站。'
      },
      correctAnswer: 'A',
      explanation: '核心銀行系統對性能、擴展性、安全性和可靠性的要求是極其嚴苛的，這通常超出了通用No-code/Low-code平台的能力範疇，需要使用傳統方式進行底層開發。'
    },
    {
      question: '「賦能業務人員 (Empowerment)」是No-code/Low-code平台的一大優勢，這主要是指什麼？',
      options: {
        A: '讓業務人員可以隨意修改公司的資料庫。',
        B: '讓最懂業務需求的業務人員能夠親手打造解決方案。',
        C: '讓業務人員可以取代所有的IT人員。',
        D: '讓業務人員可以獲得更高的薪水。'
      },
      correctAnswer: 'B',
      explanation: '這類平台打破了傳統的開發模式，讓最了解問題所在的業務人員，能夠快速地、低成本地將自己的想法變為現實，從而解決了業務與IT之間的溝通鴻溝。'
    },
    {
      question: '在「租房 vs. 蓋房」的記憶輔助中，「不能隨意敲牆改造」比喻了No-code/Low-code平台的哪個限制？',
      options: {
        A: '開發速度快',
        B: '成本低',
        C: '客製化與靈活性有限',
        D: '廠商鎖定'
      },
      correctAnswer: 'C',
      explanation: '這個比喻形象地說明了平台的靈活性限制。使用者只能在平台提供的框架和模組內進行操作，對於超出平台能力的獨特需求，則難以實現。'
    },
    {
      question: '為何說No-code/Low-code平台可以降低開發成本？',
      options: {
        A: '因為平台本身是完全免費的。',
        B: '因為它減少了對昂貴的專業開發人員的依賴，並縮短了開發週期。',
        C: '因為它不需要任何伺服器資源。',
        D: '因為它能自動產生利潤。'
      },
      correctAnswer: 'B',
      explanation: '成本的降低主要來自兩個方面：一是人力成本的節省，二是由於開發速度提升而帶來的總體專案時間成本的縮減。'
    },
    {
      question: '使用第三方No-code/Low-code平台時，企業在安全與合規方面需要關注什麼？',
      options: {
        A: '平台的使用者介面是否美觀。',
        B: '平台的創辦人是誰。',
        C: '平台的安全措施和數據治理能力是否符合企業自身的合規要求。',
        D: '平台是否經常更新版本。'
      },
      correctAnswer: 'C',
      explanation: '由於應用和數據都託管在第三方平台上，企業必須仔細審查該平台的安全性、數據儲存地點、是否符合GDPR等法規，以確保自身的數據資產安全合規。'
    },
    {
      question: '下列關於No-code/Low-code平台限制的敘述，何者「錯誤」？',
      options: {
        A: '對於需要極致性能的大型應用，其擴展性可能成為瓶頸。',
        B: '應用程式與平台高度綁定，存在廠商鎖定的風險。',
        C: '它們完全無法處理任何客製化需求。',
        D: '對於高度複雜的演算法，平台可能無法實現。'
      },
      correctAnswer: 'C',
      explanation: '這個敘述過於絕對。特別是Low-code平台，其設計初衷就是允許開發者透過少量編碼來處理客製化需求。No-code平台的客製化能力雖然更有限，但通常也提供了一定的配置選項。'
    },
    {
      question: '一個新創公司希望在兩週內快速搭建一個產品原型(MVP)，以向投資人展示核心概念並驗證市場反應。他們最應該選擇哪種開發方式？',
      options: {
        A: '傳統程式開發',
        B: 'No-code/Low-code 平台',
        C: '組建一個大型的內部開發團隊',
        D: '外包給一個大型軟體公司'
      },
      correctAnswer: 'B',
      explanation: '快速原型驗證是No-code/Low-code平台最理想的應用場景之一。它對開發速度的要求遠高於對性能和擴展性的要求，平台可以最大限度地發揮其敏捷、高效的優勢。'
    },
    {
      question: '下列哪項是No-code/Low-code平台帶來的組織性優勢？',
      options: {
        A: '加深了業務部門和IT部門之間的隔閡。',
        B: '減少了業務與IT之間的溝通鴻溝，讓應用更貼近需求。',
        C: '讓所有IT人員都變得無事可做。',
        D: '讓公司不再需要任何外部軟體。'
      },
      correctAnswer: 'B',
      explanation: '透過賦能業務人員，讓他們能夠親手實現自己的想法，避免了在傳統開發模式中，需求在業務、產品經理、開發者之間層層傳遞可能導致的資訊失真和延遲。'
    }
  ],
  L12201: [
    {
      question: '下列哪個工具最常用於根據文字描述生成富有藝術感的圖像？',
      options: {
        A: 'ChatGPT',
        B: 'GitHub Copilot',
        C: 'Midjourney',
        D: 'Google翻譯'
      },
      correctAnswer: 'C',
      explanation: 'Midjourney是一款專注於圖像生成的AI工具，以其能創作出高品質、風格獨特的藝術圖像而聞名。ChatGPT主要用於文本，GitHub Copilot用於程式碼。'
    },
    {
      question: '生成式AI在軟體開發領域的主要應用是什麼？',
      options: {
        A: '設計使用者介面的顏色搭配。',
        B: '自動編寫、除錯和解釋程式碼。',
        C: '管理專案的預算。',
        D: '召開每日站立會議。'
      },
      correctAnswer: 'B',
      explanation: '以GitHub Copilot為代表的工具，可以作為開發者的「智能副駕」，根據上下文和註解自動生成程式碼，極大地提升了開發效率。'
    },
    {
      question: '下列何者是生成式AI在文字內容創作領域的典型應用？',
      options: {
        A: '計算文章中的字數。',
        B: '檢查文章中的拼寫錯誤。',
        C: '自動撰寫行銷文案或電子郵件草稿。',
        D: '將文字轉換為PDF檔案。'
      },
      correctAnswer: 'C',
      explanation: '生成式AI（如ChatGPT）的核心能力之一就是根據指令創造全新的文本內容，這使其成為內容創作者和行銷人員的強大助手。'
    },
    {
      question: '「將人機互動從『指令式』變為『對話式』」，這描述了生成式AI在哪個領域的影響？',
      options: {
        A: '圖像創作',
        B: '音樂創作',
        C: '對話式AI與知識問答',
        D: '程式碼生成'
      },
      correctAnswer: 'C',
      explanation: '大型語言模型的出現，使得聊天機器人能夠更好地理解上下文，進行更自然、更有邏輯的對話，極大地改善了人機互動的體驗。'
    },
    {
      question: 'Stable Diffusion 是一款什麼類型的生成式AI工具？',
      options: {
        A: '文本生成工具',
        B: '開源的圖像生成模型',
        C: '音樂生成工具',
        D: '影片生成工具'
      },
      correctAnswer: 'B',
      explanation: 'Stable Diffusion是一款強大的、開源的文生圖模型，因其開放性和可擴展性，在開發者和AI愛好者社群中非常流行。'
    },
    {
      question: 'Gamma 和 Tome 這類工具，主要應用於哪個領域？',
      options: {
        A: '輔助製作簡報或文件',
        B: '進行複雜的財務分析',
        C: '編輯影片',
        D: '管理客戶關係'
      },
      correctAnswer: 'A',
      explanation: '這類AI工具能夠根據用戶輸入的主題或大綱，自動生成包含完整文字、排版和配圖的簡報或文件草稿，極大提升了文件製作的效率。'
    },
    {
      question: '下列哪一項是GitHub Copilot的主要功能？',
      options: {
        A: '自動管理程式碼的版本。',
        B: '在開發環境中，根據上下文自動生成程式碼建議。',
        C: '自動測試網站的載入速度。',
        D: '自動為應用程式設計Logo。'
      },
      correctAnswer: 'B',
      explanation: 'GitHub Copilot作為一個IDE外掛，能夠即時分析開發者正在編寫的程式碼和註解，並提供 highly relevant 的程式碼補全建議。'
    },
    {
      question: '生成式AI如何改變傳統的設計和藝術創作流程？',
      options: {
        A: '讓設計師失業。',
        B: '讓沒有專業繪畫技巧的人也能將腦中的想像視覺化。',
        C: '讓所有藝術品都變得一模一樣。',
        D: '讓創作過程變得更慢、更昂貴。'
      },
      correctAnswer: 'B',
      explanation: '文生圖等工具極大地降低了視覺創作的技術門檻，成為設計師快速發想、探索創意的強大工具，也讓普通人能夠參與到視覺表達中來。'
    },
    {
      question: '下列哪一個工具組合最適合一位行銷人員用來快速製作一個圖文並茂的社群媒體貼文？',
      options: {
        A: 'GitHub Copilot + Stable Diffusion',
        B: 'ChatGPT + Midjourney',
        C: 'Google翻譯 + Gamma',
        D: '只有ChatGPT'
      },
      correctAnswer: 'B',
      explanation: '這個組合涵蓋了圖文創作的兩個核心環節：使用ChatGPT生成貼文文案，再使用Midjourney生成高品質的配圖，是一個高效的工作流程。'
    },
    {
      question: '生成式AI與傳統的搜尋引擎（如Google搜尋）最主要的區別是什麼？',
      options: {
        A: '生成式AI提供更快的搜尋速度。',
        B: '搜尋引擎從現有網頁中「檢索」並呈現資訊，而生成式AI則是「創造」新的內容來回答問題。',
        C: '搜尋引擎只能搜尋文字，生成式AI可以搜尋圖片。',
        D: '兩者沒有本質區別。'
      },
      correctAnswer: 'B',
      explanation: '這是兩者在工作原理上的根本不同。搜尋引擎是資訊的「搬運工」，而生成式AI是資訊的「加工者」和「創造者」。'
    }
  ],
  L12202: [
    {
      question: '與生成式AI（如ChatGPT）互動以獲得高品質輸出的核心技巧，被稱為什麼？',
      options: {
        A: '演算法設計',
        B: '資料庫管理',
        C: '提示工程 (Prompt Engineering)',
        D: '網路安全'
      },
      correctAnswer: 'C',
      explanation: '提示工程是設計、建構和優化輸入給AI的指令（Prompt）的藝術與科學。一個好的Prompt是引導AI產生準確、相關、高品質輸出的關鍵。'
    },
    {
      question: '使用大型語言模型時，最重要的原則之一是「批判性思維與事實查核」，這是因為它們可能會發生什麼現象？',
      options: {
        A: '拒絕回答任何問題。',
        B: '運行速度非常慢。',
        C: '產生「幻覺」，即編造出看似合理但錯誤的資訊。',
        D: '消耗大量的電腦記憶體。'
      },
      correctAnswer: 'C',
      explanation: '幻覺（Hallucination）是大型語言模型的主要風險。因此，對於AI生成的任何事實性內容（如數據、日期、引用），都必須進行嚴格的人工查證，不能完全信任。'
    },
    {
      question: '在提示工程中，為AI設定一個角色（例如，「你是一位專業的文案寫手」）的主要目的是什麼？',
      options: {
        A: '讓對話變得更有趣。',
        B: '幫助AI更好地理解使用者想要的語氣、風格和專業水平。',
        C: '測試AI是否知道這個角色。',
        D: '這是使用AI的必要格式。'
      },
      correctAnswer: 'B',
      explanation: '為AI賦予一個角色，可以有效地為其輸出設定一個框架，引導它採用特定的知識背景、語言風格和觀點，從而產生更符合需求的內容。'
    },
    {
      question: '下列哪個提示(Prompt)最有可能從AI得到高品質的回答？',
      options: {
        A: '告訴我關於AI的資訊。',
        B: '什麼是AI？',
        C: 'AI的歷史。',
        D: '你是一位AI歷史學家，請用三個段落，向大學生介紹從1950年到2020年，人工智慧發展的三個關鍵里程碑事件。'
      },
      correctAnswer: 'D',
      explanation: '這個提示最為具體，它包含了角色扮演（AI歷史學家）、明確的受眾（大學生）、具體的格式要求（三個段落、三個里程碑）和清晰的範圍（1950-2020），能夠最大限度地引導AI產生結構清晰、內容相關的回答。'
    },
    {
      question: '當你對AI的第一次回答不滿意時，根據提示工程的技巧，你應該怎麼做？',
      options: {
        A: '放棄使用，並認定這個AI沒有用。',
        B: '將完全相同的問題再問一遍。',
        C: '提出修改意見進行追問，例如要求它簡化內容或補充細節，進行迭代優化。',
        D: '重新啟動電腦。'
      },
      correctAnswer: 'C',
      explanation: '迭代與追問是提示工程的關鍵一環。有效的AI使用者會將其視為一場對話，透過不斷地提供回饋和新的指令，來逐步將AI的回答雕琢成自己想要的樣子。'
    },
    {
      question: '「Few-shot Prompting」指的是哪種提示技巧？',
      options: {
        A: '只給AI很少的字數來回答問題。',
        B: '在提示中提供幾個完整的範例，讓AI學習你想要的格式或風格。',
        C: '用非常簡短的提示來測試AI的能力。',
        D: '連續快速地向AI提問。'
      },
      correctAnswer: 'B',
      explanation: 'Few-shot Prompting是一種強大的技巧，透過在提示中內建幾個輸入-輸出的範例，AI可以快速地「在上下文中學習」到任務的模式，而無需重新訓練。'
    },
    {
      question: '為何在提示中應盡量避免使用模糊的詞語？',
      options: {
        A: '因為AI不認識模糊的詞語。',
        B: '因為模糊的指令會導致AI給出同樣模糊或籠統的答案。',
        C: '因為這會增加API的費用。',
        D: '因為這會讓AI的回答速度變慢。'
      },
      correctAnswer: 'B',
      explanation: 'AI的輸出品質直接反映了輸入提示的品質。一個清晰、具體、無歧義的提示，是獲得一個同樣清晰、具體、有用的回答的前提。'
    },
    {
      question: 'CRITICAL原則中的「I (Iterate)」強調了什麼？',
      options: {
        A: '指令要盡可能地有趣 (Interesting)。',
        B: '要不斷地追問和迭代優化 (Iterate)。',
        C: '要包含圖片 (Image)。',
        D: '要保持獨立思考 (Independent)。'
      },
      correctAnswer: 'B',
      explanation: '「Iterate」強調了與AI的互動是一個動態的對話過程，而非一次性的問答。使用者應該透過持續的回饋和調整來引導AI。'
    },
    {
      question: '在使用生成式AI輔助工作時，最終的責任由誰承擔？',
      options: {
        A: 'AI模型本身。',
        B: '開發AI模型的公司。',
        C: '使用AI並發布其內容的人類使用者。',
        D: '沒有人需要負責。'
      },
      correctAnswer: 'C',
      explanation: 'AI目前只是一個工具，人類使用者必須對其輸出內容的準確性、合規性和最終影響承擔全部責任。這也是為何批判性思維和事實查核如此重要的原因。'
    },
    {
      question: '下列哪項是學習提示工程的主要好處？',
      options: {
        A: '可以學會如何自己開發一個大型語言模型。',
        B: '可以更有效地駕馭AI工具，使其成為提升生產力的強大夥伴。',
        C: '可以獲得免費使用所有AI工具的權限。',
        D: '可以讓電腦運行得更快。'
      },
      correctAnswer: 'B',
      explanation: '提示工程是將AI的潛力轉化為實際價值的關鍵技能。掌握它，就能夠更精準、更高效地從AI獲得自己想要的結果，從而真正提升工作和學習的效率。'
    }
  ],
  L12301: [
    {
      question: '企業在評估是否導入基於第三方API的生成式AI服務時，首要的數據隱私考量是什麼？',
      options: {
        A: 'API的調用費用是否夠低。',
        B: '絕對不能將任何涉及公司機密或客戶隱私的敏感資訊傳送給公開的AI服務。',
        C: 'AI生成的回應速度是否夠快。',
        D: '該AI服務是否由知名大公司提供。'
      },
      correctAnswer: 'B',
      explanation: '使用公開的第三方API時，輸入的數據有被服務商用於模型再訓練的風險。因此，保護敏感的公司和客戶數據不外洩，是導入此類服務時最優先、最嚴格的紅線。'
    },
    {
      question: '在評估生成式AI的導入時，下列哪個場景的「幻覺風險」最低，最適合優先導入？',
      options: {
        A: '用於提供精確法律建議的AI律師。',
        B: '用於自動診斷罕見疾病的AI醫生。',
        C: '用於輔助產生多種行銷文案創意，並由人工審核的AI寫作助手。',
        D: '用於生成即時新聞報導的AI記者。'
      },
      correctAnswer: 'C',
      explanation: '在創意發想等對事實準確性要求不高的場景，AI的幻覺風險是可以接受的，且流程中有人工審核作為最後的把關。而在法律、醫療、新聞等需要高度事實準確性的領域，幻覺風險則極高。'
    },
    {
      question: '生成式AI的營運成本主要來自於哪裡？',
      options: {
        A: '硬體伺服器的採購費用。',
        B: '根據輸入和輸出Token數量計算的API調用費用。',
        C: '軟體開發人員的薪資。',
        D: '辦公室的電費。'
      },
      correctAnswer: 'B',
      explanation: '對於大多數使用第三方服務的企業而言，API調用費是持續性的、與使用量直接相關的主要營運成本，在規劃高流量應用時必須仔細估算。'
    },
    {
      question: '在評估導入生成式AI時，為何要區分「酷炫」與「實用」？',
      options: {
        A: '因為酷炫的功能通常比較便宜。',
        B: '為了避免為了追逐技術潮流而導入，應確保專案能解決真實的業務痛點並有可量化的KPI。',
        C: '因為實用的功能通常不受歡迎。',
        D: '因為酷炫的功能開發速度比較慢。'
      },
      correctAnswer: 'B',
      explanation: '成功的技術導入應該是問題導向的，而非技術導向的。評估的核心應該是AI能否為業務帶來可衡量的價值，而不是技術本身是否新潮。'
    },
    {
      question: 'V-C-R-P框架中的「R」代表什麼？',
      options: {
        A: '投資回報 (Return)',
        B: '資源 (Resource)',
        C: '風險 (Risk)',
        D: '報告 (Report)'
      },
      correctAnswer: 'C',
      explanation: '在V-C-R-P記憶框架中，V代表Value(價值)，C代表Cost(成本)，R代表Risk(風險)，P代表Plan(計畫)。'
    },
    {
      question: '為何說直接使用公開的生成式AI服務處理法律或醫療建議，其風險極高？',
      options: {
        A: '因為AI不具備相關領域的知識。',
        B: '因為AI可能產生幻覺，提供錯誤或有害的建議，且缺乏法律或醫療執照。',
        C: '因為AI的回答速度太慢，不夠即時。',
        D: '因為這些領域的資料太少，無法訓練AI。'
      },
      correctAnswer: 'B',
      explanation: '在這些需要高度專業和準確性、且後果嚴重的領域，AI的幻覺風險是不可接受的。AI的輸出絕不能取代持牌專業人士的判斷。'
    },
    {
      question: '一家公司若要使用生成式AI處理大量客戶的個人資料，最安全的作法是什麼？',
      options: {
        A: '直接將資料傳送給公開版的ChatGPT。',
        B: '先對資料進行匿名化處理，再傳送給AI。',
        C: '選擇能夠私有化部署在公司內部伺服器上的模型。',
        D: '要求客戶簽署一份免責聲明。'
      },
      correctAnswer: 'C',
      explanation: '對於高度敏感的數據，私有化部署是數據安全和隱私保護等級最高的選項，因為數據完全不出公司內網，可以最大限度地避免外洩風險。'
    },
    {
      question: '第三方AI模型的持續更新，可能為導入方帶來什麼風險？',
      options: {
        A: '模型性能會越來越差。',
        B: 'API費用會越來越高。',
        C: '可能導致之前精心設計的有效提示(Prompt)失效。',
        D: '模型會變得越來越難以使用。'
      },
      correctAnswer: 'C',
      explanation: '模型的更新是一個雙面刃。雖然通常會帶來性能提升，但也可能改變模型的行為模式，導致過去行之有效的提示(Prompt)不再產生預期的結果，這需要導入方建立相應的監控和適應機制。'
    },
    {
      question: '下列何者是評估生成式AI導入時，對「業務價值」的正確提問方式？',
      options: {
        A: '我們能用最新的GPT-4o做些什麼酷炫的展示？',
        B: '我們最大的業務瓶頸在哪裡，生成式AI能否有效解決並量化其效益？',
        C: '我們的競爭對手在使用生成式AI嗎？',
        D: '我們如何才能最快地用上生成式AI？'
      },
      correctAnswer: 'B',
      explanation: '一個成功的導入評估，應該從業務問題出發，尋找合適的技術解方，而不是拿著技術的錘子到處找釘子。'
    },
    {
      question: '評估生成式AI的成本效益時，除了API費用，還需要考慮什麼？',
      options: {
        A: '公司股票的價格。',
        B: '將AI整合進現有系統的工程成本與培訓員工的人力成本。',
        C: '競爭對手的研發費用。',
        D: '全球的電力價格。'
      },
      correctAnswer: 'B',
      explanation: '一個完整的成本效益分析，必須考慮到總體擁有成本(TCO)，這不僅包括直接的API費用，還包括所有相關的整合、開發、培訓和維護等人力與時間成本。'
    }
  ],
  L12302: [
    {
      question: '在生成式AI專案中，設計「人在迴路 (Human-in-the-Loop)」工作流程的主要目的是什麼？',
      options: {
        A: '為了增加專案的複雜度。',
        B: '讓AI可以完全取代人類工作。',
        C: '利用人類專家的審核來彌補AI可能產生的錯誤（如幻覺），並確保輸出品質。',
        D: '這是一種訓練員工寫程式的方法。'
      },
      correctAnswer: 'C',
      explanation: '考慮到生成式AI的準確性和穩定性還不完美，「人在迴路」是一個關鍵的風險管理策略。它將AI定位為一個強大的助手，但最終的判斷和決策權仍掌握在人類專家手中。'
    },
    {
      question: '將生成式AI與企業自身的內部文件、產品手冊等知識庫結合，讓AI能夠基於這些可信資料來回答問題，這種技術路徑被稱為什麼？',
      options: {
        A: '模型微調 (Fine-tuning)',
        B: '私有化部署 (Private Deployment)',
        C: '檢索增強生成 (Retrieval-Augmented Generation, RAG)',
        D: '直接使用API (API-based)'
      },
      correctAnswer: 'C',
      explanation: 'RAG是一種強大的、無需重新訓練模型就能擴展AI知識庫的方法。它透過「檢索」外部知識來為AI提供即時的、準確的上下文，能顯著降低幻覺，是企業應用中的熱門架構。'
    },
    {
      question: '在規劃生成式AI專案時，採用「最小可行性產品(MVP)」策略的好處是什麼？',
      options: {
        A: '可以一次性交付一個功能最完整的系統。',
        B: '可以避免與業務人員進行任何溝通。',
        C: '可以透過快速原型驗證，盡早收集使用者回饋並降低開發風險。',
        D: '可以保證專案的利潤最大化。'
      },
      correctAnswer: 'C',
      explanation: 'MVP策略的核心是「小步快跑、快速試錯」。在充滿不確定性的生成式AI專案中，這種敏捷迭代的方式，能有效確保最終產品的方向是正確且貼近用戶需求的。'
    },
    {
      question: '下列哪個角色在生成式AI專案團隊中，負責設計、測試和優化與AI互動的指令(Prompt)？',
      options: {
        A: '專案經理',
        B: '軟體工程師',
        C: '提示工程師',
        D: '領域專家'
      },
      correctAnswer: 'C',
      explanation: '提示工程師是隨著生成式AI興起的新興角色，他們是人與AI之間的「翻譯官」，專注於透過精巧的提示設計，來最大限度地釋放AI模型的能力。'
    },
    {
      question: '對於數據隱私和機密性要求極高的應用場景，應優先考慮哪種技術路徑？',
      options: {
        A: '直接使用公開的第三方API。',
        B: '檢索增強生成 (RAG)。',
        C: '模型微調 (Fine-tuning)。',
        D: '私有化部署。'
      },
      correctAnswer: 'D',
      explanation: '私有化部署將模型和數據都保留在企業自己的基礎設施內，提供了最高等級的數據安全和隱私保障，是處理高度機密資訊時的首選。'
    },
    {
      question: '4P原則中的「P (People)」強調了什麼？',
      options: {
        A: '專案要盡可能地公開 (Public)。',
        B: '要組建跨職能的團隊 (People)。',
        C: '專案要有豐厚的利潤 (Profit)。',
        D: '專案要遵循嚴格的計畫 (Plan)。'
      },
      correctAnswer: 'B',
      explanation: '「People」強調了組建一個包含領域專家、工程師等多樣化角色的跨職能團隊的重要性，因為生成式AI的成功導入需要業務和技術的緊密結合。'
    },
    {
      question: '「模型微調 (Fine-tuning)」指的是什麼過程？',
      options: {
        A: '對模型的程式碼進行細微的修改。',
        B: '使用公司自己的少量、特定領域的數據，對一個已經預訓練好的基礎模型進行額外訓練。',
        C: '調整模型API的收費價格。',
        D: '設計一個更好的使用者介面。'
      },
      correctAnswer: 'B',
      explanation: '微調是一種遷移學習的技術，它能讓通用的基礎模型，更好地適應特定行業的術語、風格或知識，是一種在性能和成本之間取得平衡的高效方法。'
    },
    {
      question: '在規劃內部知識庫問答機器人時，採用RAG架構的主要優勢是什麼？',
      options: {
        A: '可以讓機器人回答任何領域的問題。',
        B: '可以確保機器人的回答是基於公司內部可信的文件，而不是胡亂編造。',
        C: '這是成本最低的實現方式。',
        D: '可以讓機器人具備情感。'
      },
      correctAnswer: 'B',
      explanation: 'RAG的核心價值在於為AI的生成過程提供了「事實依據」。透過先從內部知識庫檢索相關資訊，可以極大地提高回答的準確性和可靠性，是企業知識管理應用的關鍵技術。'
    },
    {
      question: '在生成式AI專案中，「領域專家」最重要的貢獻是什麼？',
      options: {
        A: '編寫程式碼。',
        B: '管理伺服器。',
        C: '定義業務需求，並評估AI輸出內容的品質和準確性。',
        D: '設計使用者介面。'
      },
      correctAnswer: 'C',
      explanation: '領域專家（業務人員）是連接AI技術與實際業務的橋樑。他們最清楚問題所在，也最能判斷AI的產出是否真的有用、準確、符合業務邏輯。'
    },
    {
      question: '為何說生成式AI專案特別適合採用敏捷開發模式？',
      options: {
        A: '因為敏捷開發的流程最複雜。',
        B: '因為生成式AI的結果往往需要透過不斷的嘗試和調整（例如優化提示）才能達到理想效果。',
        C: '因為敏捷開發不需要任何文件。',
        D: '因為敏捷開發是唯一被允許的開發模式。'
      },
      correctAnswer: 'B',
      explanation: '生成式AI的探索性質，使其與敏捷開發的「快速迭代、擁抱變化」理念不謀而合。很難在專案初期就完美地規劃好一切，必須透過不斷地實驗和回饋來逐步優化。'
    }
  ],
  L12303: [
    {
      question: '生成式AI被惡意用於製造逼真的偽造影片或音訊來進行詐騙或誹謗，這種風險被稱為什麼？',
      options: {
        A: '幻覺 (Hallucination)',
        B: '廠商鎖定 (Vendor Lock-in)',
        C: '深度偽造 (Deepfake)',
        D: '數據中毒 (Data Poisoning)'
      },
      correctAnswer: 'C',
      explanation: '深度偽造是利用生成式AI（特別是GANs）技術，將一個人的臉或聲音合成到另一個人的影片或音訊中，製造出極具欺騙性的虛假內容，是生成式AI帶來的主要社會風險之一。'
    },
    {
      question: '大型語言模型有時會「自信地」編造出完全錯誤的資訊，這種現象被稱為什麼？',
      options: {
        A: '模型崩潰 (Mode Collapse)',
        B: '幻覺 (Hallucination)',
        C: '數據洩漏 (Data Leakage)',
        D: '演算法偏見 (Algorithmic Bias)'
      },
      correctAnswer: 'B',
      explanation: '幻覺（Hallucination）是大型語言模型的一個主要風險，指的是模型生成了與事實不符、脫離現實的內容。在對準確性要求高的場景，這是必須管理的關鍵風險。'
    },
    {
      question: '企業員工在使用公共版的ChatGPT時，可能引發哪種最主要的風險？',
      options: {
        A: '電腦中毒。',
        B: '無意中輸入公司機密或客戶隱私數據，導致洩漏。',
        C: '網路速度變慢。',
        D: '軟體授權費用過高。'
      },
      correctAnswer: 'B',
      explanation: '這是企業導入生成式AI時最直接、最常見的隱私與機密洩漏風險。必須透過制定明確的內部使用政策來進行管控。'
    },
    {
      question: '下列何者是緩解生成式AI「幻覺」風險的有效策略？',
      options: {
        A: '完全相信AI的任何輸出。',
        B: '使用更大規模的模型。',
        C: '採用檢索增強生成(RAG)架構，讓AI基於可信知識庫回答。',
        D: '只在晚上使用AI。'
      },
      correctAnswer: 'C',
      explanation: 'RAG為AI的回答提供了「事實依據」，透過從企業內部等可信來源檢索資訊，可以顯著降低模型憑空捏造事實的機率，是企業應用中控制幻覺風險的關鍵技術。'
    },
    {
      question: '關於AI生成內容的智慧財產權，下列敘述何者最接近當前現狀？',
      options: {
        A: '所有AI生成的內容，版權都歸屬於OpenAI公司。',
        B: 'AI生成的內容完全不受版權法保護。',
        C: '版權歸屬在法律上仍是模糊地帶，充滿爭議且各國規定不一。',
        D: '使用者對AI生成的內容擁有絕對、無爭議的版權。'
      },
      correctAnswer: 'C',
      explanation: '生成式AI的版權問題是一個非常新且複雜的法律領域，目前全球尚未形成統一的法律共識，相關的訴訟和法規仍在發展中，是企業使用時需要關注的法律風險。'
    },
    {
      question: '企業應如何管理員工使用生成式AI的隱私風險？',
      options: {
        A: '完全禁止所有員工使用任何AI工具。',
        B: '不進行任何管理，讓員工自由使用。',
        C: '制定明確的內部使用政策，嚴禁輸入敏感資訊，並考慮採用企業級服務。',
        D: '只允許高階主管使用。'
      },
      correctAnswer: 'C',
      explanation: '一個務實的管理方法，是在「賦能」與「風控」之間取得平衡。透過制定清晰的遊戲規則，並提供更安全的企業級工具，可以在享受AI帶來效率提升的同時，管控好數據安全的風險。'
    },
    {
      question: '風險管理框架中的「C (Content)」主要關注什麼？',
      options: {
        A: 'API調用成本 (Cost)',
        B: '內容的準確性風險 (Content Accuracy)',
        C: '與客戶的溝通 (Communication)',
        D: '程式碼的複雜度 (Complexity)'
      },
      correctAnswer: 'B',
      explanation: '在記憶輔助框架中，C代表Content，指的是由「幻覺」等問題引起的內容不準確、不可靠的風險。'
    },
    {
      question: '「提示注入攻擊 (Prompt Injection)」是生成式AI面臨的一種新型安全威脅，它指的是什麼？',
      options: {
        A: '向AI模型中注入病毒。',
        B: '透過惡意設計的提示，來操縱或欺騙模型，使其繞過安全限制。',
        C: '大量發送API請求，使服務癱瘓。',
        D: '竊取AI模型的原始碼。'
      },
      correctAnswer: 'B',
      explanation: '提示注入攻擊利用了AI對自然語言的理解能力，透過在提示中隱藏惡意指令，來劫持AI的行為，是生成式AI時代特有的安全風險。'
    },
    {
      question: '下列何者是生成式AI可能帶來的「輸入風險」？',
      options: {
        A: 'AI生成的內容可能與現有版權作品相似。',
        B: '用於訓練AI模型的數據，可能包含了未經授權的版權內容。',
        C: '使用者輸入了不道德的提示。',
        D: 'AI的輸出內容包含了錯誤的事實。'
      },
      correctAnswer: 'B',
      explanation: '輸入風險指的是與模型「訓練數據」相關的法律風險。如果訓練數據來源不合法，模型本身就可能帶有原罪，引發後續的侵權訴訟。'
    },
    {
      question: '一個負責任的企業在使用生成式AI時，應該採取什麼樣的態度？',
      options: {
        A: '將AI的輸出直接用於關鍵決策，無需審核。',
        B: '主動管理其帶來的風險，並建立人工審核等配套流程。',
        C: '將所有風險都歸咎於AI服務提供商。',
        D: '只關注其帶來的效率提升，忽略潛在風險。'
      },
      correctAnswer: 'B',
      explanation: '負責任地使用AI，意味著不能只看到其好處，更要主動地、系統性地去識別、評估和緩解其獨有的風險，確保技術的應用是安全、合規且對社會有益的。'
    }
  ]
};